// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model checkin {
  fsId     String   @id
  date     DateTime
  tz       Int
  venue    venue    @relation(fields: [venueId], references: [fsId])
  venueId  String
  Trip     trip?    @relation(fields: [tripId], references: [eqId])
  tripId   Int?
  flightId String?
  flight   flight?  @relation(fields: [flightId], references: [flightyId])
}

model venue {
  fsId              String      @id
  name              String
  address           String?
  lat               Float
  lng               Float
  postalCode        String?
  cc                String
  city              String?
  state             String?
  country           String
  category          String?
  fsIcon            String?
  mapIcon           String?
  airportCode       String?
  airport           airport?    @relation(fields: [airportCode], references: [code])
  checkins          checkin[]
  hotelChecked      Boolean     @default(false)
  hotel             hotel?
  restaurantChecked Boolean     @default(false)
  restaurant        restaurant?
  venueIcon         venueIcon?  @relation(fields: [fsIcon], references: [fsIcon])
}

model venueIcon {
  fsIcon String  @id
  eqIcon String?
  venues venue[]
}

model hotel {
  michelinId Int    @id
  lat        Float
  lng        Float
  name       String
  city       String
  country    String
  award      String
  url        String
  venue      venue  @relation(fields: [venueId], references: [fsId])
  venueId    String @unique
}

model restaurant {
  michelinId Int    @id
  lat        Float
  lng        Float
  name       String
  city       String
  country    String
  street     String
  award      String
  url        String
  website    String
  venue      venue  @relation(fields: [venueId], references: [fsId])
  venueId    String @unique
}

model trip {
  eqId     Int       @id @default(autoincrement())
  start    DateTime
  end      DateTime
  checkins checkin[]
  flights  flight[]
}

model flight {
  flightyId           String    @id
  date                DateTime
  airline             String
  flightNumber        String
  fromAirportCode     String
  toAirportCode       String
  departureTerminal   String?
  departureGate       String?
  arrivalTerminal     String?
  arrivalGate         String?
  canceled            Boolean   @default(false)
  divertedToCode      String?
  scheduledDeparture  DateTime?
  actualDeparture     DateTime?
  scheduledTakeoff    DateTime?
  actualTakeoff       DateTime?
  scheduledLanding    DateTime?
  actualLanding       DateTime?
  scheduledArrival    DateTime?
  actualArrival       DateTime?
  aircraftType        String?
  tailNumber          String?
  pnr                 String?
  seat                String?
  seatType            String?
  cabinClass          String?
  flightReason        String?
  notes               String?
  airlineFlightyId    String?
  depAirportFlightyId String?
  arrAirportFlightyId String?
  divAirportFlightyId String?
  aircraftFlightyId   String?
  trips               trip[]
  checkins            checkin[]
  fromAirport         airport?  @relation("fromAirport", fields: [fromAirportCode], references: [code])
  toAirport           airport?  @relation("toAirport", fields: [toAirportCode], references: [code])
  divertedToAirport   airport?  @relation("divertedToAirport", fields: [divertedToCode], references: [code])
}

model home {
  eqId     Int       @id @default(autoincrement())
  name     String    @unique
  lat      Float
  lng      Float
  start    DateTime
  end      DateTime
  airports airport[]
}

model airport {
  code            String   @id
  icao            String?
  name            String
  latitude        Float
  longitude       Float
  elevation       Int?
  url             String?
  timezone        String?
  city            String?
  country         String
  state           String?
  county          String?
  venues          venue[]
  homes           home[]
  fromFlights     flight[] @relation("fromAirport")
  toFlights       flight[] @relation("toAirport")
  divertedFlights flight[] @relation("divertedToAirport")
}
