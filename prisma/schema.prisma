generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model checkin {
  fsId     String   @id
  date     DateTime
  tz       Int
  venueId  String
  tripId   Int?
  flightId String?
  flight   flight?  @relation(fields: [flightId], references: [flightyId])
  trip     trip?    @relation(fields: [tripId], references: [eqId])
  venue    venue    @relation(fields: [venueId], references: [fsId])
}

model venue {
  fsId              String      @id
  name              String
  address           String?
  lat               Float
  lng               Float
  postalCode        String?
  cc                String
  city              String?
  state             String?
  country           String
  category          String?
  fsIcon            String?
  mapIcon           String?
  airportCode       String?
  hotelChecked      Boolean     @default(false)
  restaurantChecked Boolean     @default(false)
  checkins          checkin[]
  hotel             hotel?
  restaurant        restaurant?
  airport           airport?    @relation(fields: [airportCode], references: [code])
  venueIcon         venueIcon?  @relation(fields: [fsIcon], references: [fsIcon])
}

model venueIcon {
  fsIcon String  @id
  eqIcon String?
  venues venue[]
}

model hotel {
  michelinId Int    @id
  lat        Float
  lng        Float
  name       String
  city       String
  country    String
  award      String
  url        String
  venueId    String @unique
  venue      venue  @relation(fields: [venueId], references: [fsId])
}

model restaurant {
  michelinId Int    @id
  lat        Float
  lng        Float
  name       String
  city       String
  country    String
  street     String
  award      String
  url        String
  website    String
  venueId    String @unique
  venue      venue  @relation(fields: [venueId], references: [fsId])
}

model trip {
  eqId     Int       @id @default(autoincrement())
  start    DateTime
  end      DateTime
  checkins checkin[]
  flights  flight[]  @relation("flightTotrip")
}

model flight {
  flightyId           String    @id
  date                DateTime
  airline             String
  flightNumber        String
  fromAirportCode     String
  toAirportCode       String
  departureTerminal   String?
  departureGate       String?
  arrivalTerminal     String?
  arrivalGate         String?
  canceled            Boolean   @default(false)
  divertedToCode      String?
  scheduledDeparture  DateTime?
  actualDeparture     DateTime?
  scheduledTakeoff    DateTime?
  actualTakeoff       DateTime?
  scheduledLanding    DateTime?
  actualLanding       DateTime?
  scheduledArrival    DateTime?
  actualArrival       DateTime?
  aircraftType        String?
  tailNumber          String?
  pnr                 String?
  seat                String?
  seatType            String?
  cabinClass          String?
  flightReason        String?
  notes               String?
  airlineFlightyId    String?
  depAirportFlightyId String?
  arrAirportFlightyId String?
  divAirportFlightyId String?
  aircraftFlightyId   String?
  checkins            checkin[]
  divertedToAirport   airport?  @relation("divertedToAirport", fields: [divertedToCode], references: [code])
  fromAirport         airport   @relation("fromAirport", fields: [fromAirportCode], references: [code])
  toAirport           airport   @relation("toAirport", fields: [toAirportCode], references: [code])
  trips               trip[]    @relation("flightTotrip")
}

model home {
  eqId     Int       @id @default(autoincrement())
  name     String    @unique
  lat      Float
  lng      Float
  start    DateTime
  end      DateTime
  airports airport[] @relation("airportTohome")
}

model airport {
  code            String   @id
  icao            String?
  name            String
  elevation       Int?
  url             String?
  timezone        String?
  city            String?
  country         String
  state           String?
  county          String?
  lat             Float
  lng             Float
  divertedFlights flight[] @relation("divertedToAirport")
  fromFlights     flight[] @relation("fromAirport")
  toFlights       flight[] @relation("toAirport")
  venues          venue[]
  homes           home[]   @relation("airportTohome")
}
